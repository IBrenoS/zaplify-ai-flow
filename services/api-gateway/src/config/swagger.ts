import swaggerJSDoc from 'swagger-jsdoc';

import { logger } from '../utils/index.js';

/**
 * Configura√ß√£o do Swagger/OpenAPI para o API Gateway
 * Documenta√ß√£o apenas das rotas do gateway (n√£o agrega specs de outros servi√ßos)
 */
const swaggerDefinition = {
  openapi: '3.0.0',
  info: {
    title: 'Zaplify AI Flow - API Gateway',
    version: '1.0.0',
    description: `
      **API Gateway para Zaplify AI Flow**

      Este gateway centraliza o acesso aos microservi√ßos de IA, WhatsApp, Funnel e Analytics.

      **Recursos Principais:**
      - üîê Autentica√ß√£o JWT com sistema hier√°rquico de escopos
      - ‚ö° Rate limiting global e por tenant
      - üîó Proxy routes com propaga√ß√£o autom√°tica de headers
      - üåê WebSocket Gateway para comunica√ß√£o real-time
      - üìä Health check agregado de todos os servi√ßos

      **Headers Globais:**
      - \`x-correlation-id\`: ID de correla√ß√£o para rastreamento
      - \`x-tenant-id\`: Identifica√ß√£o do tenant
      - \`Authorization\`: Token JWT Bearer para autentica√ß√£o
    `,
    contact: {
      name: 'Zaplify AI Flow Team',
      email: 'dev@zaplify.com'
    },
    license: {
      name: 'MIT',
      url: 'https://opensource.org/licenses/MIT'
    }
  },
  servers: [
    {
      url: 'http://localhost:8080',
      description: 'Development Server'
    },
    {
      url: 'https://api.zaplify.com',
      description: 'Production Server'
    }
  ],
  components: {
    securitySchemes: {
      bearerAuth: {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        description: 'JWT Token obtido atrav√©s do servi√ßo de autentica√ß√£o'
      }
    },
    parameters: {
      correlationId: {
        name: 'x-correlation-id',
        in: 'header',
        description: 'ID √∫nico para rastreamento da requisi√ß√£o atrav√©s dos servi√ßos',
        required: false,
        schema: {
          type: 'string',
          format: 'uuid',
          example: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890'
        }
      },
      tenantId: {
        name: 'x-tenant-id',
        in: 'header',
        description: 'Identificador do tenant para isolamento de dados',
        required: false,
        schema: {
          type: 'string',
          example: 'acme-corp'
        }
      }
    },
    schemas: {
      Error: {
        type: 'object',
        required: ['ok', 'error', 'timestamp'],
        properties: {
          ok: {
            type: 'boolean',
            example: false,
            description: 'Indica se a opera√ß√£o foi bem-sucedida'
          },
          error: {
            type: 'string',
            example: 'Downstream service error',
            description: 'Mensagem de erro'
          },
          timestamp: {
            type: 'string',
            format: 'date-time',
            example: '2025-08-11T23:00:00.000Z',
            description: 'Timestamp do erro'
          },
          correlation_id: {
            type: 'string',
            format: 'uuid',
            example: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',
            description: 'ID de correla√ß√£o da requisi√ß√£o'
          },
          tenant_id: {
            type: 'string',
            example: 'acme-corp',
            description: 'ID do tenant'
          }
        }
      },
      HealthCheck: {
        type: 'object',
        required: ['ok', 'service', 'timestamp'],
        properties: {
          ok: {
            type: 'boolean',
            example: true,
            description: 'Status geral do gateway'
          },
          service: {
            type: 'string',
            example: 'api-gateway',
            description: 'Nome do servi√ßo'
          },
          deps: {
            type: 'object',
            description: 'Status dos servi√ßos dependentes',
            properties: {
              ia: {
                type: 'object',
                properties: {
                  ok: { type: 'boolean', example: true },
                  service: { type: 'string', example: 'ia' },
                  responseTime: { type: 'number', example: 45 }
                }
              },
              whatsapp: {
                type: 'object',
                properties: {
                  ok: { type: 'boolean', example: true },
                  service: { type: 'string', example: 'whatsapp' },
                  responseTime: { type: 'number', example: 67 }
                }
              },
              funnel: {
                type: 'object',
                properties: {
                  ok: { type: 'boolean', example: true },
                  service: { type: 'string', example: 'funnel' },
                  responseTime: { type: 'number', example: 89 }
                }
              },
              analytics: {
                type: 'object',
                properties: {
                  ok: { type: 'boolean', example: true },
                  service: { type: 'string', example: 'analytics' },
                  responseTime: { type: 'number', example: 123 }
                }
              }
            }
          },
          tenant_id: {
            type: 'string',
            example: 'default',
            description: 'ID do tenant'
          },
          correlation_id: {
            type: 'string',
            format: 'uuid',
            example: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',
            description: 'ID de correla√ß√£o'
          },
          timestamp: {
            type: 'string',
            format: 'date-time',
            example: '2025-08-11T23:00:00.000Z',
            description: 'Timestamp da verifica√ß√£o'
          }
        }
      },
      ProxyResponse: {
        type: 'object',
        required: ['data'],
        properties: {
          data: {
            type: 'object',
            required: ['ok', 'status', 'correlation_id', 'tenant_id', 'responseTime'],
            properties: {
              ok: {
                type: 'boolean',
                example: true,
                description: 'Indica se a opera√ß√£o proxy foi bem-sucedida'
              },
              status: {
                type: 'number',
                example: 200,
                description: 'Status HTTP do servi√ßo downstream'
              },
              data: {
                type: 'object',
                description: 'Dados retornados pelo servi√ßo downstream'
              },
              correlation_id: {
                type: 'string',
                format: 'uuid',
                example: 'a1b2c3d4-e5f6-7890-abcd-ef1234567890',
                description: 'ID de correla√ß√£o'
              },
              tenant_id: {
                type: 'string',
                example: 'acme-corp',
                description: 'ID do tenant'
              },
              responseTime: {
                type: 'number',
                example: 150,
                description: 'Tempo de resposta em millisegundos'
              },
              success: {
                type: 'boolean',
                example: true,
                description: 'Indica se o proxy foi executado com sucesso'
              }
            }
          }
        }
      }
    }
  },
  security: [
    {
      bearerAuth: []
    }
  ]
};

const options = {
  definition: swaggerDefinition,
  apis: [
    './src/routes/*.ts',
    './src/routes/*.js'
  ]
};

export const swaggerSpec = swaggerJSDoc(options);

/**
 * Log da configura√ß√£o do Swagger
 */
export function logSwaggerConfig(): void {
  logger.info('Swagger configuration loaded', 'system', 'swagger-init', {
    title: swaggerDefinition.info.title,
    version: swaggerDefinition.info.version,
    servers: swaggerDefinition.servers.length,
    schemas: Object.keys(swaggerDefinition.components.schemas).length,
    apis: options.apis
  });
}
